May 12:
Changes into making an input file for ANNOVAR
Most important change is to add 1 to the reported positions of DELETIONS to be consistent with the Vardict outputs. 

Make anno input for indels works OK.
Running annovar on varscan indels also work OK.

For future work on: 
Combining the varscan and annovar outputs for varscan, make sure left join works ok and there are no NAs. 

Check the number of rows in the varscan output and annovar output, they should be the same.
Combining vardict and varscan for later. 

MAY 16 2022 (Monday)
Noticed that the input file for annovar indels (varscan) isn't correct. The addition doesn't work. Working on it now. - DONE.

Now Annovar should work on VarScan indels, and its output should be the same as the Vardict results. Now running Annovar on indels on batch 5.

Next steps:
1. Check the filter_varscan script to see if the previously written code can handle new the indels. Annovar might be outputting them in a slightly different format.

2. Change make_anno_indel file again to consider multiple indels that happen at the same location. previously i was excluding the indel with lower vaf.
This change is added! Now Ref and Alt alleles are generated based on the Cons seq. Rerunning ANNOVAR on VarScan indels. IT WORKS. 

MAY 18 (WEDNESDAY)
Sometimes we have cases like this from varscan:
chrX    44974800        C       +T/+T   87      298     75.25%  2       2       55      59      2.41754696291885
chrX    44974800        C       */+TT   87      10      2.53%   2       2       55      56      7.65118343560819
Same location with two different indels. The one with * is heterozygous, the other case above has both alleles impacted with the indel. I need to rewrite the ANNOVAR indel files to includes cases like this, which isn't many. I predict this is the final change I need to make in the ANNOVAR input files. I just finished editing, should work now. Rerunning making input files for ANNOVAR. YES IT WORKS OMG YAAAY. Running ANNOVAR in all batches now. 

Now working on the filter varscan script. Indels work ok. Now working on combining SNVs - SNV calls from VarScan and ANNOVAR.
VarScan analysis completed. SNVs and indels are classified correctly.
Now need to work on combining VarScan results with GATK and VarDict. 
And incorporating the WBC results - (CHIP must be present in both)

FOR LATER:
Working on combining results from variant callers.

MAY 24, 2022: 
Worked on combining results from variant callers. Something isn't quite right with the varscan indels.
I realized a while ago that varscan reports the position prior to the indel, for example if a base at position 1551 is deleted, varscan reports the position at 1550. 
Vardict reports the actual position where indel happens though. To accomodate for this, I added 1 to all varscan deletions, and also updated the reference and alt bases at those positions. 
However, scanning the compare_with_tumor.R results, it seems to me that even though the reference base is correct, the position isn't. The position just before the actual deletion is being reported. 
This causes mistakes when trying to count how many variant callers picked up a certain variant. 
I don't really have time to deal with this now, but it is worthwhile to go back to the UTILITIES_filter_varscan.R file and try to catch where the error happened.
ACTION THAT I TOOK: Manually added 1 to all varscan deletions in the combine_variant_callers.R file. I know I know I'll deal with it later!

AUG 3rd 2022
Made some changes to the varscan script that filters out the variants called by varscan. Nothing major, as a final filtering step I removed variants if they appear
in more than n samples, n is set to 3. I am running the script on various batches now. Changes I made works well on both snvs and indels. Tomorrow will move onto the
vardict script. 

AUG 4th 2022
Updated the files that parse vardict output, similar to the progress made yesterday on varscan. Rerunning all the batches to recompute vardict outputs. One thing to 
check is that when I run only keep the variants in the panel, I get n-1 variants retained from the original number, judgin by the warning message on the terminal.
Look into that. 
- More general double checking is needed to make sure variants are merged correctly. 
- Combining tumor and WBC outputs

AUG 5th 2022
- Previously done duplicate identification was incorrect, I was doing it before completing all filtering, so naturally even if some variants are lost after filtering
some of them were being identified as duplicates. Now duplicate identification is done at the very end. 
- A minor change to the AA identification,changed how I was splitting the string to make sure the protein annotation, starting with p. was correct. 
